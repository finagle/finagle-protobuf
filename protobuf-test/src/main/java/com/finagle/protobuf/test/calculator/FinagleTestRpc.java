// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: finagle-test-rpc.proto

package com.finagle.protobuf.test.calculator;

public final class FinagleTestRpc {
  private FinagleTestRpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CalcRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string id = 1;
    boolean hasId();
    String getId();
    
    // optional fixed64 timestamp = 2;
    boolean hasTimestamp();
    long getTimestamp();
    
    // optional .com.finagle.protobuf.test.calculator.InputListInteger input = 3;
    boolean hasInput();
    com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger getInput();
    com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListIntegerOrBuilder getInputOrBuilder();
  }
  public static final class CalcRequest extends
      com.google.protobuf.GeneratedMessage
      implements CalcRequestOrBuilder {
    // Use CalcRequest.newBuilder() to construct.
    private CalcRequest(Builder builder) {
      super(builder);
    }
    private CalcRequest(boolean noInit) {}
    
    private static final CalcRequest defaultInstance;
    public static CalcRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CalcRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcRequest_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcRequest_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional fixed64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    // optional .com.finagle.protobuf.test.calculator.InputListInteger input = 3;
    public static final int INPUT_FIELD_NUMBER = 3;
    private com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger input_;
    public boolean hasInput() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger getInput() {
      return input_;
    }
    public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListIntegerOrBuilder getInputOrBuilder() {
      return input_;
    }
    
    private void initFields() {
      id_ = "";
      timestamp_ = 0L;
      input_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, input_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, input_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static CalcRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalcRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalcRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalcRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalcRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalcRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static CalcRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalcRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalcRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalcRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CalcRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CalcRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcRequest_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcRequest_fieldAccessorTable;
      }
      
      // Construct using com.finagle.protobuf.test.calculator.FinagleTestRpc.CalcRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInputFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (inputBuilder_ == null) {
          input_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.getDefaultInstance();
        } else {
          inputBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalcRequest.getDescriptor();
      }
      
      public CalcRequest getDefaultInstanceForType() {
        return CalcRequest.getDefaultInstance();
      }
      
      public CalcRequest build() {
        CalcRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private CalcRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        CalcRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public CalcRequest buildPartial() {
        CalcRequest result = new CalcRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (inputBuilder_ == null) {
          result.input_ = input_;
        } else {
          result.input_ = inputBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalcRequest) {
          return mergeFrom((CalcRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(CalcRequest other) {
        if (other == CalcRequest.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasInput()) {
          mergeInput(other.getInput());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readFixed64();
              break;
            }
            case 26: {
              com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.Builder subBuilder = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.newBuilder();
              if (hasInput()) {
                subBuilder.mergeFrom(getInput());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInput(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string id = 1;
      private Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
      }
      
      // optional fixed64 timestamp = 2;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .com.finagle.protobuf.test.calculator.InputListInteger input = 3;
      private com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger input_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.Builder, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListIntegerOrBuilder> inputBuilder_;
      public boolean hasInput() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger getInput() {
        if (inputBuilder_ == null) {
          return input_;
        } else {
          return inputBuilder_.getMessage();
        }
      }
      public Builder setInput(com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
          onChanged();
        } else {
          inputBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setInput(
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.Builder builderForValue) {
        if (inputBuilder_ == null) {
          input_ = builderForValue.build();
          onChanged();
        } else {
          inputBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeInput(com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger value) {
        if (inputBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              input_ != com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.getDefaultInstance()) {
            input_ =
              com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.newBuilder(input_).mergeFrom(value).buildPartial();
          } else {
            input_ = value;
          }
          onChanged();
        } else {
          inputBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearInput() {
        if (inputBuilder_ == null) {
          input_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.getDefaultInstance();
          onChanged();
        } else {
          inputBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.Builder getInputBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getInputFieldBuilder().getBuilder();
      }
      public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListIntegerOrBuilder getInputOrBuilder() {
        if (inputBuilder_ != null) {
          return inputBuilder_.getMessageOrBuilder();
        } else {
          return input_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.Builder, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListIntegerOrBuilder> 
          getInputFieldBuilder() {
        if (inputBuilder_ == null) {
          inputBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListInteger.Builder, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.InputListIntegerOrBuilder>(
                  input_,
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        return inputBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.finagle.protobuf.test.calculator.CalcRequest)
    }
    
    static {
      defaultInstance = new CalcRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.finagle.protobuf.test.calculator.CalcRequest)
  }
  
  public interface CalcResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string id = 1;
    boolean hasId();
    String getId();
    
    // optional string errorString = 2;
    boolean hasErrorString();
    String getErrorString();
    
    // optional fixed64 timestamp = 3;
    boolean hasTimestamp();
    long getTimestamp();
    
    // optional .com.finagle.protobuf.test.calculator.Result result = 4;
    boolean hasResult();
    com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result getResult();
    com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.ResultOrBuilder getResultOrBuilder();
  }
  public static final class CalcResponse extends
      com.google.protobuf.GeneratedMessage
      implements CalcResponseOrBuilder {
    // Use CalcResponse.newBuilder() to construct.
    private CalcResponse(Builder builder) {
      super(builder);
    }
    private CalcResponse(boolean noInit) {}
    
    private static final CalcResponse defaultInstance;
    public static CalcResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CalcResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcResponse_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcResponse_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string errorString = 2;
    public static final int ERRORSTRING_FIELD_NUMBER = 2;
    private Object errorString_;
    public boolean hasErrorString() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getErrorString() {
      Object ref = errorString_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          errorString_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getErrorStringBytes() {
      Object ref = errorString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        errorString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional fixed64 timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    // optional .com.finagle.protobuf.test.calculator.Result result = 4;
    public static final int RESULT_FIELD_NUMBER = 4;
    private com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result result_;
    public boolean hasResult() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result getResult() {
      return result_;
    }
    public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.ResultOrBuilder getResultOrBuilder() {
      return result_;
    }
    
    private void initFields() {
      id_ = "";
      errorString_ = "";
      timestamp_ = 0L;
      result_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasResult()) {
        if (!getResult().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getErrorStringBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed64(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, result_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getErrorStringBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static CalcResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalcResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalcResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalcResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalcResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalcResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static CalcResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalcResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalcResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalcResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CalcResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CalcResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcResponse_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FinagleTestRpc.internal_static_com_finagle_protobuf_test_calculator_CalcResponse_fieldAccessorTable;
      }
      
      // Construct using com.finagle.protobuf.test.calculator.FinagleTestRpc.CalcResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        errorString_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (resultBuilder_ == null) {
          result_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.getDefaultInstance();
        } else {
          resultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalcResponse.getDescriptor();
      }
      
      public CalcResponse getDefaultInstanceForType() {
        return CalcResponse.getDefaultInstance();
      }
      
      public CalcResponse build() {
        CalcResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private CalcResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        CalcResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public CalcResponse buildPartial() {
        CalcResponse result = new CalcResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.errorString_ = errorString_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (resultBuilder_ == null) {
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalcResponse) {
          return mergeFrom((CalcResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(CalcResponse other) {
        if (other == CalcResponse.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasErrorString()) {
          setErrorString(other.getErrorString());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (hasResult()) {
          if (!getResult().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              errorString_ = input.readBytes();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readFixed64();
              break;
            }
            case 34: {
              com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.Builder subBuilder = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.newBuilder();
              if (hasResult()) {
                subBuilder.mergeFrom(getResult());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResult(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string id = 1;
      private Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
      }
      
      // optional string errorString = 2;
      private Object errorString_ = "";
      public boolean hasErrorString() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getErrorString() {
        Object ref = errorString_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          errorString_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setErrorString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        errorString_ = value;
        onChanged();
        return this;
      }
      public Builder clearErrorString() {
        bitField0_ = (bitField0_ & ~0x00000002);
        errorString_ = getDefaultInstance().getErrorString();
        onChanged();
        return this;
      }
      void setErrorString(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        errorString_ = value;
        onChanged();
      }
      
      // optional fixed64 timestamp = 3;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .com.finagle.protobuf.test.calculator.Result result = 4;
      private com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result result_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.Builder, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.ResultOrBuilder> resultBuilder_;
      public boolean hasResult() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result getResult() {
        if (resultBuilder_ == null) {
          return result_;
        } else {
          return resultBuilder_.getMessage();
        }
      }
      public Builder setResult(com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          resultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setResult(
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.Builder builderForValue) {
        if (resultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeResult(com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result value) {
        if (resultBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              result_ != com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.getDefaultInstance()) {
            result_ =
              com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.newBuilder(result_).mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          resultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.getDefaultInstance();
          onChanged();
        } else {
          resultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.Builder getResultBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getResultFieldBuilder().getBuilder();
      }
      public com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.ResultOrBuilder getResultOrBuilder() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          return result_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.Builder, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.ResultOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.Result.Builder, com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.ResultOrBuilder>(
                  result_,
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.finagle.protobuf.test.calculator.CalcResponse)
    }
    
    static {
      defaultInstance = new CalcResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.finagle.protobuf.test.calculator.CalcResponse)
  }
  
  public static abstract class FinagleCalculator
      implements com.google.protobuf.Service {
    protected FinagleCalculator() {}
    
    public interface Interface {
      public abstract void sum(com.google.protobuf.RpcController controller, CalcRequest request, com.google.protobuf.RpcCallback<CalcResponse> done);
      
      public abstract void multiply(com.google.protobuf.RpcController controller, CalcRequest request,
              com.google.protobuf.RpcCallback<CalcResponse> done);
      
      public abstract void factorial(com.google.protobuf.RpcController controller, CalcRequest request,
              com.google.protobuf.RpcCallback<CalcResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new FinagleCalculator() {
        @Override
        public  void sum(
            com.google.protobuf.RpcController controller,
            CalcRequest request,
            com.google.protobuf.RpcCallback<CalcResponse> done) {
          impl.sum(controller, request, done);
        }
        
        @Override
        public  void multiply(
            com.google.protobuf.RpcController controller,
            CalcRequest request,
            com.google.protobuf.RpcCallback<CalcResponse> done) {
          impl.multiply(controller, request, done);
        }
        
        @Override
        public  void factorial(
            com.google.protobuf.RpcController controller,
            CalcRequest request,
            com.google.protobuf.RpcCallback<CalcResponse> done) {
          impl.factorial(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.sum(controller, (CalcRequest)request);
            case 1:
              return impl.multiply(controller, (CalcRequest)request);
            case 2:
              return impl.factorial(controller, (CalcRequest)request);
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcRequest.getDefaultInstance();
            case 1:
              return CalcRequest.getDefaultInstance();
            case 2:
              return CalcRequest.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcResponse.getDefaultInstance();
            case 1:
              return CalcResponse.getDefaultInstance();
            case 2:
              return CalcResponse.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void sum(
        com.google.protobuf.RpcController controller,
        CalcRequest request,
        com.google.protobuf.RpcCallback<CalcResponse> done);
    
    public abstract void multiply(
        com.google.protobuf.RpcController controller,
        CalcRequest request,
        com.google.protobuf.RpcCallback<CalcResponse> done);
    
    public abstract void factorial(
        com.google.protobuf.RpcController controller,
        CalcRequest request,
        com.google.protobuf.RpcCallback<CalcResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return FinagleTestRpc.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.sum(controller, (CalcRequest)request,
            com.google.protobuf.RpcUtil.<CalcResponse>specializeCallback(
              done));
          return;
        case 1:
          this.multiply(controller, (CalcRequest)request,
            com.google.protobuf.RpcUtil.<CalcResponse>specializeCallback(
              done));
          return;
        case 2:
          this.factorial(controller, (CalcRequest)request,
            com.google.protobuf.RpcUtil.<CalcResponse>specializeCallback(
              done));
          return;
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcRequest.getDefaultInstance();
        case 1:
          return CalcRequest.getDefaultInstance();
        case 2:
          return CalcRequest.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcResponse.getDefaultInstance();
        case 1:
          return CalcResponse.getDefaultInstance();
        case 2:
          return CalcResponse.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends FinagleCalculator implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void sum(
          com.google.protobuf.RpcController controller,
          CalcRequest request,
          com.google.protobuf.RpcCallback<CalcResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            CalcResponse.class,
            CalcResponse.getDefaultInstance()));
      }
      
      public  void multiply(
          com.google.protobuf.RpcController controller,
          CalcRequest request,
          com.google.protobuf.RpcCallback<CalcResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          CalcResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            CalcResponse.class,
            CalcResponse.getDefaultInstance()));
      }
      
      public  void factorial(
          com.google.protobuf.RpcController controller,
          CalcRequest request,
          com.google.protobuf.RpcCallback<CalcResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          CalcResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            CalcResponse.class,
            CalcResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public CalcResponse sum(com.google.protobuf.RpcController controller, CalcRequest request)
          throws com.google.protobuf.ServiceException;
      
      public CalcResponse multiply(com.google.protobuf.RpcController controller, CalcRequest request)
          throws com.google.protobuf.ServiceException;
      
      public CalcResponse factorial(com.google.protobuf.RpcController controller, CalcRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public CalcResponse sum(
          com.google.protobuf.RpcController controller,
          CalcRequest request)
          throws com.google.protobuf.ServiceException {
        return (CalcResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance());
      }
      
      
      public CalcResponse multiply(
          com.google.protobuf.RpcController controller,
          CalcRequest request)
          throws com.google.protobuf.ServiceException {
        return (CalcResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          CalcResponse.getDefaultInstance());
      }
      
      
      public CalcResponse factorial(
          com.google.protobuf.RpcController controller,
          CalcRequest request)
          throws com.google.protobuf.ServiceException {
        return (CalcResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          CalcResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class FinagleSummer
      implements com.google.protobuf.Service {
    protected FinagleSummer() {}
    
    public interface Interface {
      public abstract void sum(com.google.protobuf.RpcController controller, CalcRequest request, com.google.protobuf.RpcCallback<CalcResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new FinagleSummer() {
        @Override
        public  void sum(
            com.google.protobuf.RpcController controller,
            CalcRequest request,
            com.google.protobuf.RpcCallback<CalcResponse> done) {
          impl.sum(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.sum(controller, (CalcRequest)request);
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcRequest.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcResponse.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void sum(
        com.google.protobuf.RpcController controller,
        CalcRequest request,
        com.google.protobuf.RpcCallback<CalcResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return FinagleTestRpc.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.sum(controller, (CalcRequest)request,
            com.google.protobuf.RpcUtil.<CalcResponse>specializeCallback(
              done));
          return;
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcRequest.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcResponse.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends FinagleSummer implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void sum(
          com.google.protobuf.RpcController controller,
          CalcRequest request,
          com.google.protobuf.RpcCallback<CalcResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            CalcResponse.class,
            CalcResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public CalcResponse sum(com.google.protobuf.RpcController controller, CalcRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public CalcResponse sum(
          com.google.protobuf.RpcController controller,
          CalcRequest request)
          throws com.google.protobuf.ServiceException {
        return (CalcResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class FinagleMultiplier
      implements com.google.protobuf.Service {
    protected FinagleMultiplier() {}
    
    public interface Interface {
      public abstract void multiply(com.google.protobuf.RpcController controller, CalcRequest request,
              com.google.protobuf.RpcCallback<CalcResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new FinagleMultiplier() {
        @Override
        public  void multiply(
            com.google.protobuf.RpcController controller,
            CalcRequest request,
            com.google.protobuf.RpcCallback<CalcResponse> done) {
          impl.multiply(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.multiply(controller, (CalcRequest)request);
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcRequest.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcResponse.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void multiply(
        com.google.protobuf.RpcController controller,
        CalcRequest request,
        com.google.protobuf.RpcCallback<CalcResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return FinagleTestRpc.getDescriptor().getServices().get(2);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.multiply(controller, (CalcRequest)request,
            com.google.protobuf.RpcUtil.<CalcResponse>specializeCallback(
              done));
          return;
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcRequest.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcResponse.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends FinagleMultiplier implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void multiply(
          com.google.protobuf.RpcController controller,
          CalcRequest request,
          com.google.protobuf.RpcCallback<CalcResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            CalcResponse.class,
            CalcResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public CalcResponse multiply(com.google.protobuf.RpcController controller, CalcRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public CalcResponse multiply(
          com.google.protobuf.RpcController controller,
          CalcRequest request)
          throws com.google.protobuf.ServiceException {
        return (CalcResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class FinagleFactorial
      implements com.google.protobuf.Service {
    protected FinagleFactorial() {}
    
    public interface Interface {
      public abstract void factorial(com.google.protobuf.RpcController controller, CalcRequest request,
              com.google.protobuf.RpcCallback<CalcResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new FinagleFactorial() {
        @Override
        public  void factorial(
            com.google.protobuf.RpcController controller,
            CalcRequest request,
            com.google.protobuf.RpcCallback<CalcResponse> done) {
          impl.factorial(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.factorial(controller, (CalcRequest)request);
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcRequest.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return CalcResponse.getDefaultInstance();
            default:
              throw new AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void factorial(
        com.google.protobuf.RpcController controller,
        CalcRequest request,
        com.google.protobuf.RpcCallback<CalcResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return FinagleTestRpc.getDescriptor().getServices().get(3);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.factorial(controller, (CalcRequest)request,
            com.google.protobuf.RpcUtil.<CalcResponse>specializeCallback(
              done));
          return;
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcRequest.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return CalcResponse.getDefaultInstance();
        default:
          throw new AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends FinagleFactorial implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void factorial(
          com.google.protobuf.RpcController controller,
          CalcRequest request,
          com.google.protobuf.RpcCallback<CalcResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            CalcResponse.class,
            CalcResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public CalcResponse factorial(com.google.protobuf.RpcController controller, CalcRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public CalcResponse factorial(
          com.google.protobuf.RpcController controller,
          CalcRequest request)
          throws com.google.protobuf.ServiceException {
        return (CalcResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          CalcResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_finagle_protobuf_test_calculator_CalcRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_finagle_protobuf_test_calculator_CalcRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_finagle_protobuf_test_calculator_CalcResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_finagle_protobuf_test_calculator_CalcResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\026finagle-test-rpc.proto\022$com.finagle.pr" +
      "otobuf.test.calculator\032\030finagle-test-typ" +
      "es.proto\"s\n\013CalcRequest\022\n\n\002id\030\001 \002(\t\022\021\n\tt" +
      "imestamp\030\002 \001(\006\022E\n\005input\030\003 \001(\01326.com.fina" +
      "gle.protobuf.test.calculator.InputListIn" +
      "teger\"\200\001\n\014CalcResponse\022\n\n\002id\030\001 \002(\t\022\023\n\013er" +
      "rorString\030\002 \001(\t\022\021\n\ttimestamp\030\003 \001(\006\022<\n\006re" +
      "sult\030\004 \001(\0132,.com.finagle.protobuf.test.c" +
      "alculator.Result2\350\002\n\021FinagleCalculator\022l" +
      "\n\003Sum\0221.com.finagle.protobuf.test.calcul",
      "ator.CalcRequest\0322.com.finagle.protobuf." +
      "test.calculator.CalcResponse\022q\n\010Multiply" +
      "\0221.com.finagle.protobuf.test.calculator." +
      "CalcRequest\0322.com.finagle.protobuf.test." +
      "calculator.CalcResponse\022r\n\tFactorial\0221.c" +
      "om.finagle.protobuf.test.calculator.Calc" +
      "Request\0322.com.finagle.protobuf.test.calc" +
      "ulator.CalcResponse2}\n\rFinagleSummer\022l\n\003" +
      "Sum\0221.com.finagle.protobuf.test.calculat" +
      "or.CalcRequest\0322.com.finagle.protobuf.te",
      "st.calculator.CalcResponse2\206\001\n\021FinagleMu" +
      "ltiplier\022q\n\010Multiply\0221.com.finagle.proto" +
      "buf.test.calculator.CalcRequest\0322.com.fi" +
      "nagle.protobuf.test.calculator.CalcRespo" +
      "nse2\206\001\n\020FinagleFactorial\022r\n\tFactorial\0221." +
      "com.finagle.protobuf.test.calculator.Cal" +
      "cRequest\0322.com.finagle.protobuf.test.cal" +
      "culator.CalcResponseB\003\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_finagle_protobuf_test_calculator_CalcRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_finagle_protobuf_test_calculator_CalcRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_finagle_protobuf_test_calculator_CalcRequest_descriptor,
              new String[] { "Id", "Timestamp", "Input", },
              CalcRequest.class,
              CalcRequest.Builder.class);
          internal_static_com_finagle_protobuf_test_calculator_CalcResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_finagle_protobuf_test_calculator_CalcResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_finagle_protobuf_test_calculator_CalcResponse_descriptor,
              new String[] { "Id", "ErrorString", "Timestamp", "Result", },
              CalcResponse.class,
              CalcResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.finagle.protobuf.test.calculator.dto.FinagleTestTypes.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
